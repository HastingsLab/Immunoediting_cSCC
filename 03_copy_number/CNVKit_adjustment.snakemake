import os

configfile: "purity_config.json"

rule all:
    input:
        #expand(os.path.join("/xdisk/khasting/knodele/Mayo_human_data/CNVKit_results/{subject}.GRCh38_combined_PAVE_hpv.sorted.mkdup.call_abbr.cns"), subject=config["tumor_samples"]),
        expand(os.path.join("/xdisk/khasting/knodele/Mayo_human_data/CNVKit_results/{subject}.GRCh38_combined_PAVE_hpv.sorted.mkdup.call_purity.cns"), subject=config["patients"]),
        expand(os.path.join("/xdisk/khasting/knodele/Mayo_human_data/CNVKit_results/{subject}.GRCh38_combined_PAVE_hpv.sorted.mkdup.call_purity_abbr.cns"), subject=config["patients"])

rule abbreviate_file:
    input:
        cns = os.path.join("/xdisk/khasting/knodele/Mayo_human_data/CNVKit_results/{subject}.GRCh38_combined_PAVE_hpv.sorted.mkdup.call.cns")
    output:
        cns = os.path.join("/xdisk/khasting/knodele/Mayo_human_data/CNVKit_results/{subject}.GRCh38_combined_PAVE_hpv.sorted.mkdup.call_abbr.cns")
    shell:
        """
        cat {input.cns} | awk '{{print $1, $2, $3, $6}}' > {output.cns}
	"""

# Not utilized - purity adjustment at this stage gave inconsistent results, incorporated purity adjustment in the calculation of cancer cell fractions

#rule create_germline_only:
#    input: 
#        vcf = os.path.join("/xdisk/khasting/knodele/Mayo_human_data/gatk_mutect2/{subject}.somatic.filtered.vcf")
#    output:
#        vcf = os.path.join("/xdisk/khasting/knodele/Mayo_human_data/gatk_mutect2/{subject}.somatic.filtered.germline.vcf")
#    shell:
#        """
#        bcftools view -i 'FILTER=="germline"' {input.vcf} -o {output.vcf}
#        """

#rule calculate_baf:
#    input:
#        cns = lambda wildcards: os.path.join("/xdisk/khasting/knodele/Mayo_human_data/CNVKit_results/", config[wildcards.subject]["tumor"] + ".GRCh38_combined_PAVE_hpv.sorted.mkdup.call.cns"),
#        #vcf = os.path.join("/xdisk/khasting/knodele/Mayo_human_data/gatk_mutect2/{subject}.somatic.filtered.germline.vcf")
#    output:
#        cns = os.path.join("/xdisk/khasting/knodele/Mayo_human_data/CNVKit_results/{subject}.GRCh38_combined_PAVE_hpv.sorted.mkdup.call_purity.cns")
#    params:
#        tumor = lambda wildcards: config[wildcards.subject]["tumor"],
#        normal = lambda wildcards: config[wildcards.subject]["normal"],
#        purity = lambda wildcards: config[wildcards.subject]["purity"]
#    shell:
#        """
#        cnvkit.py call {input.cns} -y -m clonal --purity {params.purity} -o {output.cns} -i {params.tumor} -n {params.normal}
#        """

#rule abbreviate_purity_file:
#    input:
#        cns = os.path.join("/xdisk/khasting/knodele/Mayo_human_data/CNVKit_results/{subject}.GRCh38_combined_PAVE_hpv.sorted.mkdup.call_purity.cns")
#    output:
#        cns = os.path.join("/xdisk/khasting/knodele/Mayo_human_data/CNVKit_results/{subject}.GRCh38_combined_PAVE_hpv.sorted.mkdup.call_purity_abbr.cns")
#    shell:
#        """
#        cat {input.cns} | awk '{{print $1, $2, $3, $6}}' > {output.cns}
#        """
